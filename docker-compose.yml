services:
  postgres:
    image: postgres:15
    container_name: pioneer-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: pioneer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pioneer"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pioneer-network

  redis:
    image: redis:alpine
    container_name: pioneer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - pioneer-network

  app:
    build:
      context: .
      dockerfile: application.Dockerfile
    container_name: pioneer-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/pioneer
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_CACHE_TYPE: redis
    networks:
      - pioneer-network

volumes:
  postgres_data:
  redis_data:

networks:
  pioneer-network:
    driver: bridge
    name: pioneer-network